{
	"info": {
		"_postman_id": "3f4df8fb-ceb9-4d98-98e8-7ed6f189094b",
		"name": "Homework_Postman_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23726934"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"   pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp_f=pm.response.json()\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"   \r",
							"    pm.expect(resp_f.name).to.eql(\"julia\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"   \r",
							"    pm.expect(+resp_f.age).to.eql(18);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check salary\", function () {\r",
							"   \r",
							"    pm.expect(+resp_f.salary).to.eql(500);\r",
							"});\r",
							"\r",
							"let requests=request.data\r",
							"\r",
							"pm.test(\"Check name 1 \", function () {\r",
							"    pm.expect(resp_f.name).to.eql(requests.name);\r",
							"}); \r",
							"\r",
							"pm.test(\"Check age 1 \", function () {\r",
							"    pm.expect(resp_f.age).to.eql(requests.age);\r",
							"}); \r",
							"\r",
							"pm.test(\"Check salary 1 \", function () {\r",
							"    pm.expect(resp_f.salary).to.eql(+requests.salary);\r",
							"}); \r",
							"\r",
							"console.log(resp_f.family)\r",
							"\r",
							"let req_salary=requests.salary\r",
							"let resp_u_salary_1_5_year=resp_f.family.u_salary_1_5_year\r",
							"pm.test(\"Check salary in next year \", function () {\r",
							"    pm.expect( resp_u_salary_1_5_year).to.eql(req_salary*4);\r",
							"}); \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "julia",
							"type": "text"
						},
						{
							"key": "age",
							"value": "18",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_3",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"let resp_f = pm.response.json()\r",
							"let req_f =  pm.request.url.query.toObject()\r",
							"\t\t\t\t\t\t\t\r",
							"\r",
							"pm.test(\"Check name  \", function () {\r",
							"    pm.expect(resp_f.name).to.eql(req_f.name);\r",
							"}); \r",
							"\r",
							"pm.test(\"Check age  \", function () {\r",
							"    pm.expect(resp_f.age).to.eql(req_f.age);\r",
							"}); \r",
							"\r",
							"pm.test(\"Check salary  \", function () {\r",
							"    pm.expect(resp_f.salary).to.eql(+req_f.salary);\r",
							"}); \r",
							"\r",
							"console.log(resp_f.family)\r",
							"\r",
							"let resp_dogn=resp_f.family.pets.dog\r",
							"pm.test(\"Check property dogs name  \", function () {\r",
							"    pm.expect(resp_dogn).to.have.property(\"name\");\r",
							"}); \r",
							"\r",
							"let resp_doga=resp_f.family.pets.dog\r",
							"pm.test(\"Check property dogs age  \", function () {\r",
							"    pm.expect(resp_doga).to.have.property(\"age\");\r",
							"}); \r",
							"\r",
							"let resp_luky= resp_f.family.pets.dog.name\r",
							"pm.test(\"Check that dogs name is luky  \", function () {\r",
							"    pm.expect(resp_luky).to.eql(\"Luky\");\r",
							"}); \r",
							"\r",
							"let resp_4= resp_f.family.pets.dog.age\r",
							"pm.test(\"Check that dogs age is 4  \", function () {\r",
							"    pm.expect(+resp_4).to.eql(4);\r",
							"}); \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "julia",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "18",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=julia&age=18&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "julia"
						},
						{
							"key": "age",
							"value": "18"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp_f = pm.response.json()\r",
							"let req_f =  pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"   \r",
							"    pm.expect(resp_f.name).to.eql(resp_f.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"   \r",
							"    pm.expect(resp_f.age).to.eql(resp_f.age);\r",
							"});\r",
							"\r",
							"let req_s= req_f.salary\r",
							"console.log(req_s)\r",
							"\r",
							"let resp_s= resp_f.salary\r",
							"console.log(resp_s)\r",
							"\r",
							"\r",
							"console.log(resp_f.salary[0])\r",
							"\r",
							"console.log(resp_f.salary[1])\r",
							"\r",
							"console.log(resp_f.salary[2])\r",
							"\r",
							"pm.test(\"Check that response_name0=request_name0\", function () {\r",
							"   \r",
							"    pm.expect(resp_f.salary[0]).to.eql(+req_f.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that response_name1=request_name1\", function () {\r",
							"   \r",
							"    pm.expect(+resp_f.salary[1]).to.eql(req_f.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that response_name2=request_name2\", function () {\r",
							"   \r",
							"    pm.expect(+resp_f.salary[2]).to.eql(req_f.salary*3);\r",
							"})\r",
							"\r",
							"\r",
							"pm.environment.set(\"name\", req_f.name)\r",
							"\r",
							"\r",
							"pm.environment.set(\"age\", req_f.age)\r",
							"\r",
							"\r",
							"pm.environment.set(\"salary\", req_f.salary)\r",
							"\r",
							"let arr=resp_f.salary\r",
							"for (let i=0; i<3; i++){\r",
							" console.log(arr[i])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=julia&age=18&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "julia"
						},
						{
							"key": "age",
							"value": "18"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp_f=pm.response.json();\r",
							"\r",
							"let req_f=request.data;\r",
							"\r",
							"pm.test(\"Check start_qa_salary \", function () {\r",
							"    \r",
							"    pm.expect(resp_f).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_6_months \", function () {\r",
							"    \r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_12_months \", function () {\r",
							"    \r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_1.5_year \", function () {\r",
							"    \r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_years  \", function () {\r",
							"    \r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check person  \", function () {\r",
							"    \r",
							"    pm.expect(resp_f).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check start_qa_salary=salary \", function () {\r",
							"    \r",
							"    pm.expect(resp_f.start_qa_salary).to.eql(+req_f.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_6_months=salary*2  \", function () {\r",
							"    \r",
							"    pm.expect(resp_f.qa_salary_after_6_months).to.eql(+req_f.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_12_months=salary*2.7  \", function () {\r",
							"    \r",
							"    pm.expect(resp_f.qa_salary_after_12_months).to.eql(+req_f.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_1.5_months=salary*3.3  \", function () {\r",
							"    \r",
							"    pm.expect(resp_f[\"qa_salary_after_1.5_year\"]).to.eql(+req_f.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_years=salary*3.8  \", function () {\r",
							"    \r",
							"    pm.expect(resp_f[\"qa_salary_after_3.5_years\"]).to.eql(+req_f.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"Check u_name[1]= salary  \", function () {\r",
							"    \r",
							"    pm.expect(resp_f.person.u_name[1]).to.eql(+req_f.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check u_name[2]= age  \", function () {\r",
							"    \r",
							"    pm.expect(resp_f.person.u_name[2]).to.eql(+req_f.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check u_salary_5_years=salary*4.2  \", function () {\r",
							"    \r",
							"    pm.expect(resp_f.person.u_salary_5_years).to.eql(+req_f.salary*4.2);\r",
							"});\r",
							"\r",
							"for (let i in resp_f.person){\r",
							"    console.log(\"Property: \", i ,\"property value: \", resp_f.person[i])};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}